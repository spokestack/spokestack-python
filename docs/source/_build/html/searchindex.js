Search.setIndex({
    docnames: [
        "index",
        "modules",
        "spokestack",
        "spokestack.asr",
        "spokestack.context",
        "spokestack.io",
        "spokestack.models",
        "spokestack.nlu",
        "spokestack.nlu.parsers",
        "spokestack.tts",
        "spokestack.tts.clients",
        "spokestack.vad",
        "spokestack.wakeword",
    ],
    envversion: {
        "sphinx.domains.c": 2,
        "sphinx.domains.changeset": 1,
        "sphinx.domains.citation": 1,
        "sphinx.domains.cpp": 3,
        "sphinx.domains.index": 1,
        "sphinx.domains.javascript": 2,
        "sphinx.domains.math": 2,
        "sphinx.domains.python": 2,
        "sphinx.domains.rst": 2,
        "sphinx.domains.std": 1,
        "sphinx.ext.viewcode": 1,
        sphinx: 56,
    },
    filenames: [
        "index.rst",
        "modules.rst",
        "spokestack.rst",
        "spokestack.asr.rst",
        "spokestack.context.rst",
        "spokestack.io.rst",
        "spokestack.models.rst",
        "spokestack.nlu.rst",
        "spokestack.nlu.parsers.rst",
        "spokestack.tts.rst",
        "spokestack.tts.clients.rst",
        "spokestack.vad.rst",
        "spokestack.wakeword.rst",
    ],
    objects: {
        "": { spokestack: [2, 0, 0, "-"] },
        "spokestack.asr": {
            cloud_client: [3, 0, 0, "-"],
            speech_recognizer: [3, 0, 0, "-"],
        },
        "spokestack.asr.cloud_client": {
            APIError: [3, 1, 1, ""],
            CloudClient: [3, 2, 1, ""],
        },
        "spokestack.asr.cloud_client.CloudClient": {
            connect: [3, 3, 1, ""],
            disconnect: [3, 3, 1, ""],
            end: [3, 3, 1, ""],
            idle_count: [3, 3, 1, ""],
            idle_timeout: [3, 3, 1, ""],
            initialize: [3, 3, 1, ""],
            is_connected: [3, 3, 1, ""],
            is_final: [3, 3, 1, ""],
            receive: [3, 3, 1, ""],
            response: [3, 3, 1, ""],
            send: [3, 3, 1, ""],
        },
        "spokestack.asr.speech_recognizer": {
            CloudSpeechRecognizer: [3, 2, 1, ""],
        },
        "spokestack.asr.speech_recognizer.CloudSpeechRecognizer": {
            close: [3, 3, 1, ""],
            reset: [3, 3, 1, ""],
        },
        "spokestack.context": { SpeechContext: [4, 2, 1, ""] },
        "spokestack.context.SpeechContext": {
            append_buffer: [4, 3, 1, ""],
            buffer: [4, 3, 1, ""],
            clear_buffer: [4, 3, 1, ""],
            confidence: [4, 3, 1, ""],
            is_active: [4, 3, 1, ""],
            is_speech: [4, 3, 1, ""],
            reset: [4, 3, 1, ""],
            transcript: [4, 3, 1, ""],
        },
        "spokestack.io": { pyaudio: [5, 0, 0, "-"] },
        "spokestack.io.pyaudio": {
            PyAudioInput: [5, 2, 1, ""],
            PyAudioOutput: [5, 2, 1, ""],
        },
        "spokestack.io.pyaudio.PyAudioInput": {
            close: [5, 3, 1, ""],
            is_active: [5, 3, 1, ""],
            is_stopped: [5, 3, 1, ""],
            read: [5, 3, 1, ""],
            start: [5, 3, 1, ""],
            stop: [5, 3, 1, ""],
        },
        "spokestack.io.pyaudio.PyAudioOutput": { write: [5, 3, 1, ""] },
        "spokestack.models": { tensorflow: [6, 0, 0, "-"] },
        "spokestack.models.tensorflow": { TFLiteModel: [6, 2, 1, ""] },
        "spokestack.models.tensorflow.TFLiteModel": {
            input_details: [6, 3, 1, ""],
            output_details: [6, 3, 1, ""],
        },
        "spokestack.nlu": { parsers: [8, 0, 0, "-"], tflite: [7, 0, 0, "-"] },
        "spokestack.nlu.parsers": {
            digits: [8, 0, 0, "-"],
            entity: [8, 0, 0, "-"],
            integer: [8, 0, 0, "-"],
            maps: [8, 0, 0, "-"],
            selset: [8, 0, 0, "-"],
        },
        "spokestack.nlu.parsers.digits": { parse: [8, 4, 1, ""] },
        "spokestack.nlu.parsers.entity": { parse: [8, 4, 1, ""] },
        "spokestack.nlu.parsers.integer": { parse: [8, 4, 1, ""] },
        "spokestack.nlu.parsers.selset": { parse: [8, 4, 1, ""] },
        "spokestack.nlu.tflite": { TFLiteNLU: [7, 2, 1, ""] },
        "spokestack.tts": { clients: [10, 0, 0, "-"], manager: [9, 0, 0, "-"] },
        "spokestack.tts.clients": { spokestack: [10, 0, 0, "-"] },
        "spokestack.tts.clients.spokestack": {
            TTSError: [10, 1, 1, ""],
            TextToSpeechClient: [10, 2, 1, ""],
        },
        "spokestack.tts.clients.spokestack.TextToSpeechClient": {
            synthesize: [10, 3, 1, ""],
        },
        "spokestack.tts.manager": {
            SequenceIO: [9, 2, 1, ""],
            TextToSpeechManager: [9, 2, 1, ""],
            close: [9, 4, 1, ""],
        },
        "spokestack.tts.manager.SequenceIO": { read: [9, 3, 1, ""] },
        "spokestack.tts.manager.TextToSpeechManager": {
            synthesize: [9, 3, 1, ""],
        },
        "spokestack.utils": { load_json: [2, 4, 1, ""] },
        "spokestack.vad": { webrtc: [11, 0, 0, "-"] },
        "spokestack.vad.webrtc": { VoiceActivityDetector: [11, 2, 1, ""] },
        "spokestack.vad.webrtc.VoiceActivityDetector": {
            reset: [11, 3, 1, ""],
        },
        "spokestack.wakeword": {
            ring_buffer: [12, 0, 0, "-"],
            tflite: [12, 0, 0, "-"],
        },
        "spokestack.wakeword.ring_buffer": { RingBuffer: [12, 2, 1, ""] },
        "spokestack.wakeword.ring_buffer.RingBuffer": {
            capacity: [12, 3, 1, ""],
            fill: [12, 3, 1, ""],
            is_empty: [12, 3, 1, ""],
            is_full: [12, 3, 1, ""],
            read: [12, 3, 1, ""],
            read_all: [12, 3, 1, ""],
            reset: [12, 3, 1, ""],
            rewind: [12, 3, 1, ""],
            seek: [12, 3, 1, ""],
            write: [12, 3, 1, ""],
        },
        "spokestack.wakeword.tflite": { WakewordTrigger: [12, 2, 1, ""] },
        "spokestack.wakeword.tflite.WakewordTrigger": { reset: [12, 3, 1, ""] },
        spokestack: {
            asr: [3, 0, 0, "-"],
            context: [4, 0, 0, "-"],
            io: [5, 0, 0, "-"],
            models: [6, 0, 0, "-"],
            nlu: [7, 0, 0, "-"],
            tts: [9, 0, 0, "-"],
            utils: [2, 0, 0, "-"],
            vad: [11, 0, 0, "-"],
            wakeword: [12, 0, 0, "-"],
        },
    },
    objnames: {
        "0": ["py", "module", "Python module"],
        "1": ["py", "exception", "Python exception"],
        "2": ["py", "class", "Python class"],
        "3": ["py", "method", "Python method"],
        "4": ["py", "function", "Python function"],
    },
    objtypes: {
        "0": "py:module",
        "1": "py:exception",
        "2": "py:class",
        "3": "py:method",
        "4": "py:function",
    },
    terms: {
        abstract: 7,
        byte: [2, 4, 5, 10],
        case: [7, 8],
        class: [2, 3, 4, 5, 6, 7, 9, 10, 11, 12],
        default: [3, 5],
        float: [2, 4, 12],
        import: 8,
        int: [3, 5, 8, 11, 12],
        return: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
        true: [2, 4, 5, 12],
        For: 8,
        The: [8, 12],
        These: 8,
        accept: 8,
        acces: 6,
        activ: [2, 4, 5, 11],
        add: [2, 4],
        addit: 6,
        advanc: 12,
        alia: 8,
        alias: 8,
        allow: [8, 9],
        along: [7, 8],
        ambigu: 8,
        ani: [2, 3, 6, 7, 8],
        api: [3, 10],
        api_doc: 6,
        apierror: 3,
        append_buff: [2, 4],
        appl: 8,
        argument: 6,
        arrai: 12,
        asr: [1, 2],
        associ: 7,
        audio: [2, 3, 4, 5, 9, 10, 11, 12],
        audio_format: 3,
        automat: 8,
        base: [2, 3, 4, 5, 6, 7, 9, 10, 11, 12],
        beam: 8,
        befor: 3,
        between: [2, 4, 8],
        binari: 3,
        bool: [2, 3, 4, 5, 12],
        buffer: [2, 4, 12],
        built: 8,
        bulb: 8,
        calcul: 12,
        can: [8, 12],
        capac: 12,
        cardin: 8,
        channel: 5,
        classif: [2, 4],
        clear_buff: [2, 4],
        client: [2, 3, 9],
        close: [3, 5, 9],
        cloud: 3,
        cloud_client: [1, 2],
        cloudclient: 3,
        cloudspeechrecogn: 3,
        commun: 3,
        compon: 11,
        confid: [2, 4],
        connect: 3,
        constant: 11,
        contain: [2, 3, 4, 7, 8, 9, 10, 11, 12],
        content: [0, 1],
        context: [0, 1],
        contrast: 8,
        convert: [8, 10],
        correspond: 8,
        could: 8,
        count: 8,
        counter: 3,
        credenti: [3, 10],
        currect: 12,
        current: [2, 3, 4, 11, 12],
        custom: 8,
        databas: 8,
        decod: 9,
        delai: 11,
        demo: 10,
        dequ: [2, 4],
        desir: [5, 12],
        detail: 6,
        detect: [11, 12],
        determin: 12,
        devic: 5,
        dict: [2, 3, 8],
        dictionari: 2,
        differ: 8,
        digit: [2, 7],
        dimension: 12,
        directori: [7, 12],
        disconnect: 3,
        dtype: 12,
        dump: 12,
        edg: 11,
        either: 8,
        emmphasi: 12,
        empti: [2, 3, 4, 12],
        encod: [3, 9, 10],
        end: 3,
        english: 8,
        entir: 12,
        entiti: [2, 7],
        error: [3, 10],
        etc: [8, 9],
        exampl: 8,
        except: [3, 5, 10],
        exception_on_overflow: 5,
        expect: 8,
        fall: 11,
        fals: [2, 4, 5, 12],
        fft: 12,
        fft_hop_length: 12,
        fft_window_typ: 12,
        file: [2, 6],
        fill: 12,
        filter: 12,
        five: 8,
        float32: 12,
        form: [8, 10],
        format: [3, 9],
        frame: [2, 3, 4, 5, 11],
        frame_width: [3, 5, 11],
        from: [3, 5, 8, 10, 12],
        full: 12,
        gener: 2,
        get: 8,
        given: [9, 10],
        handl: 9,
        hann: 12,
        head: 12,
        hold: [2, 4],
        homophon: 8,
        howev: 8,
        http: [6, 10],
        hyphen: 8,
        ident: [3, 10],
        idl: 3,
        idle_count: 3,
        idle_timeout: 3,
        implement: 12,
        increment: 9,
        indic: 3,
        initi: 3,
        input: [3, 5, 6, 12],
        input_detail: 6,
        integ: [2, 7],
        intent: 7,
        interpret: 6,
        introduc: 8,
        invalid: 8,
        is_act: [2, 4, 5],
        is_connect: 3,
        is_empti: 12,
        is_fin: 3,
        is_ful: 12,
        is_speech: [2, 4],
        is_stop: 5,
        issu: 8,
        item: 12,
        iter: [3, 10],
        its: 8,
        join: 8,
        json: [2, 7],
        kei: [3, 8, 10],
        key_id: [3, 10],
        key_secret: [3, 10],
        keyword: [6, 8, 12],
        khz: [3, 12],
        kwarg: [2, 4, 6],
        lamp: 8,
        languag: 3,
        last: 3,
        latter: 8,
        length: 12,
        light: 8,
        like: 8,
        limit: [3, 8],
        list: [6, 8],
        lite: 6,
        load_json: 2,
        logic: [3, 8],
        mai: 8,
        male: 10,
        manag: [1, 2, 4, 6],
        map: [2, 7],
        markdown: [9, 10],
        max: 12,
        maximum: [3, 8],
        member: [2, 4],
        messag: 3,
        metadata: [7, 8],
        method: [2, 4],
        minimum: 8,
        mode: [9, 10, 11],
        model: [0, 1, 2, 4, 7, 8, 12],
        model_dir: [7, 12],
        model_path: 6,
        modul: [0, 1, 4],
        more: 8,
        most: [3, 8, 12],
        move: 12,
        mp3: 9,
        multi: 8,
        multipl: 6,
        must: 8,
        name: [8, 9, 10, 11],
        ndarrai: [3, 12],
        need: [9, 10],
        nine: 8,
        nineti: 8,
        nlu: [1, 2],
        none: [2, 3, 4, 5, 8, 9, 11, 12],
        note: 8,
        num_channel: 5,
        number: [3, 5, 8, 12],
        numpi: 12,
        object: [2, 3, 4, 5, 6, 7, 9, 10, 11, 12],
        occurr: 8,
        one: 8,
        onli: 12,
        org: 6,
        otherwis: [2, 4, 5, 12],
        our: 8,
        out: 3,
        output: [5, 6, 8, 9],
        output_detail: 6,
        overflow: 5,
        packag: [0, 1],
        paramet: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
        pars: 8,
        parsabl: 8,
        parser: [2, 7],
        pass: [3, 8],
        path: [2, 6, 7, 12],
        pcm16le: 3,
        pcm: 3,
        per: [3, 12],
        phone: 8,
        pipelin: [2, 3, 4],
        posit: 12,
        posterior_threshold: 12,
        pre: 12,
        pre_emphasi: 12,
        presenc: [11, 12],
        present: [2, 4],
        probabl: 12,
        proces: [2, 4],
        process: 5,
        produc: 5,
        properti: [2, 3, 4, 5, 6, 12],
        provid: 9,
        pyaudio: [1, 2],
        pyaudioinput: 5,
        pyaudiooutput: 5,
        python: [6, 8],
        rang: 8,
        rate: [3, 5, 11],
        raw_valu: 8,
        read: [5, 9, 12],
        read_al: 12,
        receiv: [3, 9],
        recent: [3, 12],
        recogn: 3,
        recognit: 3,
        render: [9, 10],
        represent: [2, 4, 8],
        request: 3,
        reset: [2, 3, 4, 11, 12],
        resolv: 8,
        respons: [3, 10],
        result: [2, 4, 8],
        retriev: 5,
        rewind: 12,
        ring: 12,
        ring_buff: [0, 1, 2],
        ringbuff: 12,
        rise: 11,
        sampl: [3, 5, 11, 12],
        sample_r: [3, 5, 11, 12],
        search: 8,
        second: 12,
        secret: [3, 10],
        secur: 8,
        seek: 12,
        segment: 3,
        self: [9, 12],
        selset: [2, 7],
        send: 3,
        sequenc: [8, 9, 10],
        sequenceio: 9,
        servic: 3,
        set: [2, 4, 11],
        sever: 3,
        shape: 12,
        singl: [3, 5, 8],
        sixti: 8,
        size: [9, 12],
        slide: 12,
        slot: [7, 8],
        social: 8,
        socket: 3,
        socket_url: 3,
        some: 8,
        sourc: [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],
        specif: 12,
        specifi: [9, 12],
        speech: [0, 2, 3, 9, 10],
        speech_recogn: [1, 2],
        speechcontext: [2, 4],
        spokestack: 4,
        spokestack_id: 3,
        spokestack_secret: 3,
        ssml: [9, 10],
        start: [5, 12],
        state: [2, 4, 11, 12],
        statu: 3,
        step: 12,
        stft: 12,
        stop: 5,
        str: [2, 3, 4, 6, 7, 8, 9, 10, 12],
        stream: [5, 12],
        string: [3, 8, 9, 10],
        submodul: [0, 1],
        subpackag: 1,
        support: 12,
        synthes: [9, 10],
        synthesi: [9, 10],
        system: 5,
        tabl: 8,
        tag: 8,
        take: 7,
        target: 9,
        telephon: 8,
        tensorflow: [0, 1, 2],
        text: [2, 3, 4, 9, 10],
        texttospeechcli: 10,
        texttospeechmanag: 9,
        tflite: [0, 1, 2, 6],
        tflitemodel: 6,
        tflitenlu: 7,
        thi: [2, 3, 4, 5, 7, 8, 9, 10, 11, 12],
        thousand: 8,
        three: 8,
        threshold: 12,
        through: [3, 8],
        time: 3,
        timeout: 3,
        transcript: [2, 4],
        tts: [1, 2],
        ttserror: 10,
        twenti: 8,
        two: 8,
        txt: 7,
        type: [2, 3, 4, 5, 6, 8, 9, 10, 11, 12],
        under: 3,
        unhyphen: 8,
        union: 8,
        url: [3, 10],
        use: [3, 8, 9, 10],
        used: [3, 8],
        uses: 5,
        using: 7,
        util: 1,
        utter: [7, 9, 10],
        vad: [0, 1, 2],
        vad_fall_delai: 11,
        vad_rise_delai: 11,
        valu: [2, 4, 8, 12],
        vocab: 7,
        voic: [9, 10, 11],
        voiceactivitydetector: 11,
        wakeword: [0, 1, 2],
        wakeworddetector: 12,
        wakewordtrigg: 12,
        webrtc: [0, 1, 2],
        websocket: 3,
        which: [7, 8, 9],
        width: [3, 5, 11],
        window: 12,
        word: 8,
        wrapper: [9, 10],
        write: [5, 9, 12],
        written: 12,
        www: 6,
    },
    titles: [
        "spokestack",
        "spokestack",
        "spokestack package",
        "spokestack.asr package",
        "Speech Context",
        "spokestack.io package",
        "spokestack.models package",
        "spokestack.nlu package",
        "spokestack.nlu.parsers package",
        "spokestack.tts package",
        "spokestack.tts.clients package",
        "spokestack.vad package",
        "spokestack.wakeword package",
    ],
    titleterms: {
        asr: 3,
        client: 10,
        cloud_client: 3,
        content: [2, 3, 5, 6, 7, 8, 9, 10, 11, 12],
        context: [2, 4],
        digit: 8,
        entiti: 8,
        integ: 8,
        manag: 9,
        map: 8,
        model: 6,
        modul: [2, 3, 5, 6, 7, 8, 9, 10, 11, 12],
        nlu: [7, 8],
        packag: [2, 3, 5, 6, 7, 8, 9, 10, 11, 12],
        parser: 8,
        pyaudio: 5,
        ring_buff: 12,
        selset: 8,
        speech: 4,
        speech_recogn: 3,
        spokestack: [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12],
        submodul: [2, 3, 5, 6, 7, 8, 9, 10, 11, 12],
        subpackag: [2, 7, 9],
        tensorflow: 6,
        tflite: [7, 12],
        tts: [9, 10],
        util: 2,
        vad: 11,
        wakeword: 12,
        webrtc: 11,
    },
});
